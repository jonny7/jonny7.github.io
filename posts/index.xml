<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jonny7.github.io</title><link>https://jonny7.github.io/posts/</link><description>Recent content in Posts on Jonny7.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 30 Jun 2020 16:38:12 -0300</lastBuildDate><atom:link href="https://jonny7.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Concurrency - Part One</title><link>https://jonny7.github.io/posts/go-concurrency/</link><pubDate>Tue, 30 Jun 2020 16:38:12 -0300</pubDate><guid>https://jonny7.github.io/posts/go-concurrency/</guid><description>This is going to be a little series on concurrency and Go. Just to capture some ideas and capabilities with the language, along with some code for solving real world problems. But first
What is Concurrency There is a load of descriptions of what concurrency is, often they&amp;rsquo;re incorrectly describing parallelism. You can find loads of information, but a great talk is Rob Pike&amp;rsquo;s concurrency is not parallelism. But in a nut shell, I really like the definition of concurrency being a property of code and parallelism being a property of execution.</description></item><item><title>What I :heart: About Mongo</title><link>https://jonny7.github.io/posts/what-i-like-about-mongo/</link><pubDate>Mon, 29 Jun 2020 13:30:12 -0300</pubDate><guid>https://jonny7.github.io/posts/what-i-like-about-mongo/</guid><description>Intro I&amp;rsquo;ll start by saying I&amp;rsquo;m a huge fan of relational databases. So if you&amp;rsquo;d told me a year or two ago, I&amp;rsquo;d be writing an article about Mongo, I&amp;rsquo;d have been skeptical. But it turns out that MongoDB is awesome.
I was building a JSON aggregator and was planning to tackle it with Postgres. Which is an awesome DB. The main things I hadn&amp;rsquo;t decided on was how much data to slam in a JSONB column and how much to take out and put in columns to keep some kind of hybrid SQL &amp;amp; NoSQL DB.</description></item><item><title>What I :heart: About Go</title><link>https://jonny7.github.io/posts/what-i-like-about-go/</link><pubDate>Fri, 19 Jun 2020 12:30:22 -0300</pubDate><guid>https://jonny7.github.io/posts/what-i-like-about-go/</guid><description>I first got involved with got a year or two ago. I needed to parse HL7, no, not the nice version. The gross version. Version 2.x.
Anyway, I digress, there was this decent library out there with 70 odd github stars. I remember looking at this and thinking, you look like C. But fast forward a bit and do I ❤️ Go. Certainly it&amp;rsquo;s a little to get used to, depending on what languages your used to</description></item><item><title>What I :heart: About Server Side Swift</title><link>https://jonny7.github.io/posts/server-side-swift/</link><pubDate>Sun, 07 Jun 2020 07:32:16 -0300</pubDate><guid>https://jonny7.github.io/posts/server-side-swift/</guid><description>I should preface with, I&amp;rsquo;m a contributor Vapor, the leading server side Swift framework. However, this is an attempt to be objective about Swift on the server
I first got involved with server side Swift just as Vapor 3 was in alpha. I was looking for a statically typed language that was just nice to use. I&amp;rsquo;d played around with iOS before and I generally liked Swift, but my domain was definitely full stack web/api.</description></item></channel></rss>